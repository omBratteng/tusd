name: "Build and release"

on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "examples/**"
    tags:
      - "v*"

env:
  GO111MODULE: on

jobs:
  build:
    name: Building and release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2

      -
        name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      -
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      -
        name: Build TUSD
        run: |
          ./scripts/build_all.sh
          ./scripts/package_all.sh

      -
        name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: tusd_*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  docker:
    name: Build docker image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2

      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.1.1

      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Docker Login
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build
        run: |
          docker buildx build . \
            --load \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --build-arg VERSION=$(git tag -l --points-at HEAD) \
            --build-arg COMMIT=$GITHUB_SHA \
            --tag ombratteng/tusd:$GITHUB_SHA

        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      -
        name: Push
        run: |
          docker push ombratteng/tusd:$GITHUB_SHA

  heroku:
    name: Deploy to heroku
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2

      -
        name: Deploy to heroku
        uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_USER_EMAIL}}
